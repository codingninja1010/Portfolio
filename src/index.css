@tailwind base;
@tailwind components;
@tailwind utilities;

/* Animated Scrollbar: register custom property globally so Edge/Chrome apply it reliably */
@property --sb-angle {
  syntax: '<angle>';
  inherits: false;
  initial-value: 0deg;
}
@keyframes sbAngleSpin { to { --sb-angle: 360deg; } }

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Core theme colors */
    --background: 220 15% 6%;
    --foreground: 210 40% 98%;

    /* Card colors */
    --card: 220 15% 8%;
    --card-foreground: 210 40% 98%;

    /* Popover colors */
    --popover: 220 15% 8%;
    --popover-foreground: 210 40% 98%;

    /* Primary tech blue */
    --primary: 217 91% 60%;
    --primary-foreground: 210 40% 98%;
    --primary-hover: 217 91% 55%;

    /* Secondary purple */
    --secondary: 262 83% 58%;
    --secondary-foreground: 210 40% 98%;

    /* Muted colors */
    --muted: 217 33% 17%;
    --muted-foreground: 215 20% 65%;

    /* Accent orange */
    --accent: 25 95% 53%;
    --accent-foreground: 210 40% 98%;

    /* Destructive */
    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;

    /* Borders and inputs */
    --border: 217 33% 17%;
    --input: 217 33% 17%;
    --ring: 217 91% 60%;

    /* Border radius */
    --radius: 0.75rem;

  /* Visual effects intensity defaults; may be overridden by html[data-fx] */
  --fx-aurora-opacity: 0.25;
  --fx-orb-opacity: 0.12;
  --fx-spotlight-opacity: 0.5;

    /* Custom gradients with better contrast */
  --gradient-primary: linear-gradient(135deg, hsl(217 91% 66%), hsl(262 83% 70%));
  --gradient-secondary: linear-gradient(135deg, hsl(262 83% 56%), hsl(25 95% 52%));
  --gradient-background: linear-gradient(135deg, hsl(220 15% 6%), hsl(217 33% 9%));
  --gradient-card: linear-gradient(135deg, hsl(220 15% 8% / 0.72), hsl(217 33% 12% / 0.52));

    /* Shadows */
    --shadow-glow: 0 0 40px hsl(217 91% 60% / 0.3);
    --shadow-card: 0 8px 32px hsl(220 15% 3% / 0.4);
    --shadow-primary: 0 4px 20px hsl(217 91% 60% / 0.4);

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  background: radial-gradient(1200px 800px at calc(var(--cursor-x, 50%) - 200px) calc(var(--cursor-y, 40%) - 200px), hsl(var(--primary) / 0.025), transparent 60%), var(--gradient-background);
    scroll-behavior: smooth;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
  }
  /* Global background grid for depth (very subtle) */
  body::before {
    content: "";
    position: fixed;
    inset: 0;
    z-index: 0;
    pointer-events: none;
    background:
  linear-gradient(0deg, hsl(var(--foreground) / 0.018) 1px, transparent 1px) 0 0 / 44px 44px,
  linear-gradient(90deg, hsl(var(--foreground) / 0.018) 1px, transparent 1px) 0 0 / 44px 44px;
  }

  /* Cursor spotlight overlay using CSS variables updated by CursorSpotlight */
  .cursor-spotlight-overlay {
    background: radial-gradient(240px 180px at var(--cursor-x, 50%) var(--cursor-y, 50%), hsl(var(--primary) / 0.09), transparent 70%);
    mix-blend-mode: screen;
    opacity: var(--fx-spotlight-opacity);
  }

  /* --- Aurora background layers (subtle) --- */
  .aurora-bg { filter: saturate(105%); }
  .aurora-layer {
    position: absolute;
    inset: -10% -10%;
    background: radial-gradient(40% 60% at 20% 50%, hsl(var(--primary) / 0.12), transparent 60%),
                radial-gradient(35% 50% at 80% 40%, hsl(var(--secondary) / 0.12), transparent 60%),
                radial-gradient(30% 40% at 50% 80%, hsl(var(--accent) / 0.10), transparent 60%);
    mix-blend-mode: screen;
  opacity: var(--fx-aurora-opacity);
    animation: auroraDrift 28s linear infinite;
  }
  .aurora-layer.aurora-2 { animation-duration: 36s; opacity: 0.22; }
  .aurora-layer.aurora-3 { animation-duration: 42s; opacity: 0.20; }

  @keyframes auroraDrift {
    0%   { transform: translate3d(0,0,0) scale(1); filter: blur(0px); }
    50%  { transform: translate3d(-3%, -2%, 0) scale(1.02); filter: blur(1px); }
    100% { transform: translate3d(0,0,0) scale(1); filter: blur(0px); }
  }

  /* --- Floating background orbs --- */
  .bg-orb {
    position: absolute;
    width: 520px; height: 520px;
    border-radius: 9999px;
    filter: blur(40px);
  opacity: var(--fx-orb-opacity);
    mix-blend-mode: screen;
    animation: orbFloat 38s ease-in-out infinite;
  }
  .bg-orb.orb-a { left: -10%; top: 10%; background: radial-gradient(circle, hsl(var(--primary) / 0.8), transparent 60%); }
  .bg-orb.orb-b { right: -15%; top: 30%; background: radial-gradient(circle, hsl(var(--secondary) / 0.8), transparent 60%); animation-duration: 44s; }
  .bg-orb.orb-c { left: 20%; bottom: -15%; background: radial-gradient(circle, hsl(var(--accent) / 0.8), transparent 60%); animation-duration: 52s; }

  @keyframes orbFloat {
    0%   { transform: translate3d(0,0,0) scale(1); }
    25%  { transform: translate3d(2%, -3%, 0) scale(1.02); }
    50%  { transform: translate3d(-1%, 2%, 0) scale(1.01); }
    75%  { transform: translate3d(3%, 0, 0) scale(1.03); }
    100% { transform: translate3d(0,0,0) scale(1); }
  }

  @media (prefers-reduced-motion: reduce) {
    .cursor-spotlight-overlay { display: none; }
  }

  /* Footer tagline font utility */
  .font-tagline { font-family: 'Sora', ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif; }

  /* Ensure anchors and scrollIntoView leave space for the fixed header */
  html {
    /* Default fallback; will be updated dynamically by JS */
    scroll-padding-top: var(--app-scroll-padding, 6.5rem);
    /* Reserve space for the scrollbar so layout doesn't shift */
    scrollbar-gutter: stable;
    /* IMPORTANT: give the root the same dark background so the reserved gutter isn't white */
    background: var(--gradient-background);
    /* Hint to the UA to use dark-themed form controls/scrollbars where applicable */
    color-scheme: dark;
  }

  /* Remove horizontal scrollbar globally (prevents stray overflows from animations/transforms) */
  html, body, #root {
    max-width: 100vw;
    overflow-x: hidden;
  }

  /* Utility class to apply dynamic scroll margin for anchored sections */
  .section-anchor {
    scroll-margin-top: var(--app-scroll-padding, 6.5rem);
  }

  /* Extra safety: when navigating to an element with a hash, ensure it keeps space from the top */
  :target {
    scroll-margin-top: 6.5rem;
  }

  /* Visual effects intensity presets via [data-fx] on html element */
  html[data-fx="off"] {
    --fx-aurora-opacity: 0;
    --fx-orb-opacity: 0;
    --fx-spotlight-opacity: 0;
  }
  html[data-fx="low"] {
    --fx-aurora-opacity: 0.12;
    --fx-orb-opacity: 0.06;
    --fx-spotlight-opacity: 0.28;
  }
  html[data-fx="standard"] {
    --fx-aurora-opacity: 0.25;
    --fx-orb-opacity: 0.12;
    --fx-spotlight-opacity: 0.5;
  }
  html[data-fx="high"] {
    --fx-aurora-opacity: 0.35;
    --fx-orb-opacity: 0.18;
    --fx-spotlight-opacity: 0.65;
  }

  /* Glass morphism utility */
  .glass {
    background: var(--gradient-card);
    backdrop-filter: blur(12px);
    border: 1px solid hsl(var(--border));
    box-shadow: var(--shadow-card);
    /* Smooth transform for global hover scaling */
    transform: translateZ(0);
    transition: transform 280ms ease, box-shadow 280ms ease;
    will-change: transform;
  }

  /* Hover feedback for glass cards without changing their size
     (avoid conflict with Framer Motion "whileHover" scale on TiltCard) */
  @media (hover: hover) and (pointer: fine) {
    .glass:hover {
      /* Keep scale at 1 to prevent oversized growth */
      transform: none !important;
      /* Provide subtle visual feedback instead */
      box-shadow: var(--shadow-card), 0 8px 20px hsl(var(--primary) / 0.18);
    }
  }

  /* --- Icon button press animation utility --- */
  .icon-button {
    /* Shrink on press; tweak as needed */
    --press-scale: 0.9;
  inline-size: 52px;
  block-size: 52px;
    display: inline-grid;
    place-items: center;
    border-radius: 12px;
    /* Keep existing glass visuals if used together */
    transition: transform 140ms ease, background-color 140ms ease, box-shadow 140ms ease;
    will-change: transform;
    user-select: none;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  /* Use a much lighter shadow for compact glass icon buttons to avoid a visible seam when several are aligned in a row */
  .icon-button.glass {
    /* Softer external shadow; remove inner top highlight that can align into a seam */
    box-shadow: 0 6px 14px hsl(var(--background) / 0.28);
    border-color: hsl(var(--border) / 0.55);
    position: relative;
    overflow: hidden;
  }

  /* If combined with .glass, avoid global glass hover scale here to prevent double-scaling */
  .icon-button.glass:hover {
    transform: none !important;
    box-shadow: 0 8px 18px hsl(var(--background) / 0.34);
    /* slight tint to base */
    background: linear-gradient(180deg, hsl(var(--foreground) / 0.02), hsl(var(--foreground) / 0.01));
  }

  /* Make press feel snappy and override hover */
  .icon-button.pressed { transform: scale(0.92) !important; transition: transform 110ms ease; }

  /* Dynamic spotlight that follows the cursor (variables set inline on the element) */
  .icon-button.glass::before {
    content: "";
    position: absolute;
    inset: -1px;
    border-radius: inherit;
    pointer-events: none;
    opacity: 0;
    transition: opacity 180ms ease;
    background: radial-gradient(
      140px 140px at var(--mx, 50%) var(--my, 50%),
      hsl(var(--primary) / 0.18),
      transparent 60%
    );
  }
  .icon-button.glass:hover::before { opacity: 1; }

  /* Animated gradient border highlight on hover */
  .icon-button.glass::after {
    content: "";
    position: absolute;
    inset: 0; /* keep inside bounds (masked) */
    border-radius: inherit;
    padding: 1px; /* perceived border width */
    background: conic-gradient(
      from var(--angle, 0deg),
      hsl(var(--primary) / 0),
      hsl(var(--primary) / 0.75) 20%,
      hsl(var(--secondary) / 0.75) 55%,
      hsl(var(--accent) / 0.75) 80%,
      hsl(var(--primary) / 0) 100%
    );
    /* Mask to show as border only */
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
            mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
            mask-composite: exclude;
    opacity: 0; /* hidden until hover */
    filter: drop-shadow(0 2px 10px hsl(var(--primary) / 0.35));
    transition: opacity 160ms ease;
  }
  .icon-button.glass:hover::after {
    opacity: 1;
    animation: spinBorder 2.2s linear infinite;
  }

  @keyframes spinBorder { to { transform: rotate(360deg); } }

  .icon-button.pressed,
  .icon-button:active {
    transform: scale(var(--press-scale));
  }

  @media (prefers-reduced-motion: reduce) {
    .icon-button { transition: none; }
    .icon-button.pressed,
    .icon-button:active { transform: none; }
  }

  /* Prevent layout/visual shift on the fixed site header when hovering over it.
     The global .glass:hover scale looks nice on cards but makes the header appear
     to "push apart" its contents as the whole bar scales. Keep header static. */
  header.glass:hover {
    transform: none !important;
  }

  /* Subtle non-layout hover feedback for the header */
  header.glass {
    /* Avoid transform-based stacking quirks from the base .glass rule */
    transform: none !important;
    transition: background-color 200ms ease, box-shadow 200ms ease, border-color 200ms ease;
  }
  header.glass:hover {
    /* Slightly intensify the shadow and add a very soft tint */
    box-shadow: var(--shadow-card), 0 4px 24px hsl(var(--primary) / 0.25);
    background: linear-gradient(135deg, hsl(220 15% 8% / 0.88), hsl(217 33% 12% / 0.72));
    /* Slightly stronger blur/saturation on hover without affecting layout */
    backdrop-filter: blur(14px) saturate(120%);
  }

  /* (Removed) bottom highlight under header */

  /* Optional helper to make specific items even bigger on hover */
  .hover-scale-lg {
    transition: transform 280ms ease;
  }
  .hover-scale-lg:hover { transform: scale(1.12); }

  /* Utility to explicitly disable hover scaling where applied by components */
  .no-hover-scale:hover { transform: none !important; }

  /* Glow effect utility */
  .glow {
    box-shadow: var(--shadow-glow);
  }

  /* --- Fancy button hover effects --- */
  .btn-border-animate {
    position: relative;
    overflow: hidden;
    border: 1px solid hsl(var(--border));
  }
  .btn-border-animate::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1.5px; /* slightly thicker animated border for visibility */
    background: conic-gradient(
      from 0deg,
      hsl(var(--primary) / 0),
      hsl(var(--primary) / 0.7) 20%,
      hsl(var(--secondary) / 0.7) 55%,
      hsl(var(--accent) / 0.7) 80%,
      hsl(var(--primary) / 0) 100%
    );
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
            mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
            mask-composite: exclude;
    opacity: 0;
    transition: opacity 160ms ease;
  }
  .btn-border-animate:hover::after { opacity: 1; animation: spinBorder 2.4s linear infinite; }

  /* Keep animated border active even without hover when a control is downloading */
  .btn-border-animate.is-downloading::after { opacity: 1; animation: spinBorder 1.8s linear infinite; }

  .btn-shine {
    position: relative;
    overflow: hidden;
  }
  .btn-shine::before {
    content: "";
    position: absolute;
    top: -50%;
    left: -30%;
    width: 55%;
    height: 220%;
    transform: rotate(25deg) translateX(-120%);
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.35), transparent);
    filter: blur(1.5px);
    transition: transform 700ms ease;
    pointer-events: none;
  }
  .btn-shine:hover::before { transform: rotate(25deg) translateX(260%); }

  /* Continuous shine sweep while downloading */
  @keyframes shineSweep {
    0% { transform: rotate(25deg) translateX(-120%); }
    50% { transform: rotate(25deg) translateX(80%); }
    100% { transform: rotate(25deg) translateX(260%); }
  }
  .btn-shine.is-downloading::before {
    animation: shineSweep 1.6s ease-in-out infinite;
  }

  /* Hover gradient fill for outline buttons */
  .btn-gradient-hover { transition: background 220ms ease, color 220ms ease, border-color 220ms ease, box-shadow 220ms ease; }
  .btn-gradient-hover:hover {
    /* Softer, low-contrast gradient fill so animations stay visible */
    background: linear-gradient(135deg, hsl(var(--primary) / 0.12), hsl(var(--secondary) / 0.12));
    color: inherit;
    border-color: hsl(var(--primary) / 0.35);
    box-shadow: 0 6px 18px hsl(var(--primary) / 0.25);
  }

  /* Gradient text utility with enhanced visibility */
  .gradient-text-enhanced {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent;
    font-weight: 700;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    /* Add subtle shadow for better visibility */
    filter: drop-shadow(0 0 1px rgba(59, 130, 246, 0.3));
  }

  /* Performance: Avoid rendering off-screen content until scrolled near */
  .cv-auto {
    content-visibility: auto;
    contain-intrinsic-size: 1px 1000px; /* reserve space to reduce layout shift */
  }

  /* ==================== Section heading + backdrop ==================== */
  .section-heading { position: relative; display: inline-block; }
  .section-heading::after {
    content: "";
    display: block;
    height: 3px;
    border-radius: 9999px;
    margin: 10px auto 0;
    width: 100%;
    background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--secondary)), hsl(var(--accent)));
    filter: drop-shadow(0 0 8px hsl(var(--primary) / .35));
    animation: underlineFlow 5s linear infinite;
  }
  @keyframes underlineFlow { 0% { background-position: 0 0; } 100% { background-position: 200% 0; } }

  .section-blob { position: absolute; inset: -10% -5% auto -5%; height: 45%; pointer-events: none; z-index: 0; filter: blur(40px); opacity: .18; }
  .section-blob.blob-edu { background: radial-gradient(40% 35% at 15% 20%, hsl(var(--primary) / .9), transparent 60%), radial-gradient(35% 35% at 85% 30%, hsl(var(--secondary) / .9), transparent 60%); animation: blobDrift 26s ease-in-out infinite; }
  .section-blob.blob-exp { background: radial-gradient(40% 35% at 10% 25%, hsl(var(--accent) / .9), transparent 60%), radial-gradient(35% 35% at 90% 40%, hsl(var(--primary) / .9), transparent 60%); animation: blobDrift 24s ease-in-out infinite reverse; }
  .section-blob.blob-vol { background: radial-gradient(40% 35% at 15% 20%, hsl(340 82% 60% / .9), transparent 60%), radial-gradient(35% 35% at 85% 40%, hsl(262 83% 58% / .9), transparent 60%); animation: blobDrift 28s ease-in-out infinite; }
  .section-blob.blob-proj { background: radial-gradient(40% 35% at 15% 20%, hsl(var(--secondary) / .9), transparent 60%), radial-gradient(35% 35% at 85% 30%, hsl(var(--accent) / .9), transparent 60%); animation: blobDrift 22s ease-in-out infinite; }
  @keyframes blobDrift { 0%,100% { transform: translateY(0) scale(1); } 50% { transform: translateY(-12px) scale(1.02); } }

  /* Utility: line clamp (2 lines) */
  .line-clamp-2 {
    display: -webkit-box;
    line-clamp: 2;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  /* Utility: line clamp (1 line) with ellipsis */
  .line-clamp-1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  /* ==================== Skills section enhancements ==================== */
  .skill-card {
    position: relative;
    isolation: isolate;
  }
  /* Animated gradient border on hover */
  .skill-card::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1.25px;
    background: conic-gradient(from var(--angle,0deg),
      hsl(var(--primary) / 0),
      hsl(var(--primary) / 0.75) 20%,
      hsl(var(--secondary) / 0.75) 55%,
      hsl(var(--accent) / 0.75) 80%,
      hsl(var(--primary) / 0) 100%
    );
    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
            mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
            mask-composite: exclude;
    opacity: 0;
    transition: opacity 180ms ease;
    pointer-events: none;
    z-index: 0;
  }
  .skill-card:hover::after { opacity: 1; animation: spinBorder 2.4s linear infinite; }

  /* Cursor-following spotlight (uses --mx/--my set by Magnetic wrapper) */
  .skill-card::before {
    content: "";
    position: absolute;
    inset: -1px;
    border-radius: inherit;
    background: radial-gradient(160px 120px at var(--mx,50%) var(--my,30%), hsl(var(--primary) / 0.14), transparent 60%);
    opacity: 0;
    transition: opacity 200ms ease;
    pointer-events: none;
    z-index: 0;
  }
  .skill-card:hover::before { opacity: 1; }

  /* Decorative drifting grid inside cards */
  .card-grid {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: radial-gradient(120% 100% at 10% -10%, hsl(var(--foreground) / 0.06), transparent 60%),
                /* circuit traces layer */
                radial-gradient(closest-side, hsl(var(--primary) / 0.08), transparent 60%) 10px 6px / 180px 120px no-repeat,
                linear-gradient(0deg, hsl(var(--foreground) / 0.08) 1px, transparent 1px),
                linear-gradient(90deg, hsl(var(--foreground) / 0.08) 1px, transparent 1px);
    background-size: 100% 100%, 180px 120px, 34px 34px, 34px 34px;
    background-position: center;
    mask: radial-gradient(80% 100% at 50% 0%, #000 40%, #0000 75%);
    opacity: 0.35;
    z-index: 0;
    animation: gridDrift 18s linear infinite;
    pointer-events: none;
  }
  @keyframes gridDrift { to { background-position: center, center, 0 34px, 34px 0; } }

  /* Ambient soft glowing dots */
  .ambient-dot { position: absolute; width: 10px; height: 10px; border-radius: 9999px; background: hsl(var(--primary)); filter: blur(6px); opacity: .25; }

  /* Skill chips with subtle shimmer and pressed ripple */
  .skill-chip { 
    background: hsl(var(--muted) / 0.32);
    border: 1px solid hsl(var(--border) / 0.7);
    position: relative;
    overflow: hidden;
    transition: background 180ms ease, border-color 180ms ease, box-shadow 180ms ease, transform 180ms ease;
    box-shadow: 0 2px 10px hsl(var(--background) / 0.2);
  }
  .skill-chip:hover { background: hsl(var(--primary) / 0.14); border-color: hsl(var(--primary) / 0.45); box-shadow: 0 6px 16px hsl(var(--primary) / 0.25); }
  .skill-chip::after {
    content: "";
    position: absolute; inset: -1px; border-radius: 9999px; pointer-events: none;
    background: linear-gradient(120deg, transparent 30%, rgba(255,255,255,0.35) 50%, transparent 70%);
    transform: translateX(-130%);
    transition: transform .7s ease;
  }
  .skill-chip:hover::after { transform: translateX(130%); }
  .skill-chip:active { transform: translateY(0.5px) scale(0.99); }

  /* Large faint watermark icon inside card */
  .card-watermark {
    position: absolute;
    right: -8px;
    bottom: -6px;
    width: 120px;
    height: 120px;
    opacity: 0.06;
    color: hsl(var(--foreground));
    pointer-events: none;
    z-index: 0;
  }

  /* Aurora beams overlay */
  .aurora { position: absolute; inset: -20%; border-radius: 24px; filter: blur(26px); opacity: 0.09; pointer-events: none; z-index: 0; }
  .aurora-a { background: radial-gradient(60% 50% at 0% 0%, hsl(var(--secondary) / .8), transparent 60%); animation: auroraShift 12s ease-in-out infinite alternate; }
  .aurora-b { background: radial-gradient(60% 50% at 100% 100%, hsl(var(--accent) / .8), transparent 60%); animation: auroraShift 14s ease-in-out infinite alternate-reverse; }
  @keyframes auroraShift { 0% { transform: translate(-4%, -3%) rotate(0deg); } 100% { transform: translate(4%, 3%) rotate(6deg); } }

  /* Floating orbs for extra depth */
  .orb { position: absolute; border-radius: 9999px; filter: blur(10px); opacity: .16; background: hsl(var(--primary)); pointer-events: none; z-index: 0; }
  .orb-1 { width: 44px; height: 44px; top: 18%; left: 10%; animation: orbFloat 10s ease-in-out infinite; }
  .orb-2 { width: 34px; height: 34px; bottom: 16%; right: 12%; animation: orbFloat 12s ease-in-out infinite reverse; }
  @keyframes orbFloat { 0%,100% { transform: translateY(0) translateX(0); } 50% { transform: translateY(-10px) translateX(6px); } }

  /* Shine sweep over entire card (softened) */
  .shine-rect { position: absolute; inset: 0; border-radius: inherit; background: linear-gradient(115deg, transparent 35%, rgba(255,255,255,var(--shine-center-alpha, .10)) 50%, transparent 65%); transform: translateX(-130%); transition: transform .85s ease; pointer-events: none; z-index: 1; }
  /* Enable sweep on multiple card types */
  .skill-card:hover .shine-rect,
  .education-card:hover .shine-rect,
  .experience-card:hover .shine-rect,
  .project-card:hover .shine-rect,
  .volunteer-card:hover .shine-rect { transform: translateX(130%); }

  /* Spotlight follows cursor (driven by --mx/--my variables set by Magnetic) — softened */
  .spotlight-overlay { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 1; opacity: 0; transition: opacity .25s ease; background: radial-gradient(160px 160px at var(--mx, 50%) var(--my, 50%), rgba(255,255,255,var(--spotlight-alpha, .08)), rgba(255,255,255,0) 60%); }
  .group:hover .spotlight-overlay { opacity: var(--spotlight-opacity-hover, .45); }

  /* Animated glow border using conic gradient — softened */
  .glow-border { position: relative; }
  .glow-border::before { content: ""; position: absolute; inset: -1px; border-radius: inherit; pointer-events: none; z-index: 0; background: conic-gradient(from 0deg, hsl(var(--primary) /.0) 0%, hsl(var(--primary)/.35) 25%, hsl(var(--secondary)/.35) 50%, hsl(var(--accent)/.35) 75%, hsl(var(--primary)/.0) 100%); filter: blur(8px); opacity: 0; transition: opacity .35s ease, filter .35s ease; }
  .glow-border:hover::before { opacity: var(--glow-opacity-hover, .30); filter: blur(10px); }

  /* Skill count badge */
  .skill-count { font-size: 12px; line-height: 1; padding: 6px 10px; border-radius: 9999px; background: linear-gradient(135deg, hsl(var(--primary) / .18), hsl(var(--secondary) / .18)); border: 1px solid hsl(var(--border) / .7); box-shadow: 0 4px 12px hsl(var(--background) / .4); }

  /* Remove count badge per latest request (leave class for future) */
  .skill-count { display: none; }

  /* Icon halo ring */
  .icon-ring { contain: paint; }
  .icon-ring .ring-spin { position: absolute; inset: -6px; border-radius: 14px; pointer-events: none; z-index: 0; background: conic-gradient(from 0deg, hsl(var(--primary) / .0), hsl(var(--primary) / .8) 20%, hsl(var(--secondary) / .8) 60%, hsl(var(--accent) / .8) 85%, hsl(var(--primary) / .0) 100%); -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0); -webkit-mask-composite: xor; mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0); mask-composite: exclude; padding: 1px; opacity: .85; animation: spinBorder 6s linear infinite; }

  /* Corner gradient ribbons */
  .skill-card::marker { display: none; }
  .skill-card .ribbon { position: absolute; width: 40%; height: 10px; background: linear-gradient(90deg, hsl(var(--primary) / .3), hsl(var(--secondary) / .3)); filter: blur(10px); opacity: .35; pointer-events: none; }
  .skill-card .ribbon.tl { top: 0; left: 8%; transform: rotate(-12deg); }
  .skill-card .ribbon.br { bottom: 0; right: 8%; transform: rotate(-12deg); }

  /* Chip hover pulse ring */
  .skill-chip { --ring-alpha: .22; }
  .skill-chip:hover { box-shadow: 0 6px 16px hsl(var(--primary) / 0.25), 0 0 0 6px hsl(var(--primary) / var(--ring-alpha)); }

  @media (prefers-reduced-motion: reduce) {
    .skill-card::after, .skill-card::before, .card-grid { animation: none; }
    .skill-card:hover::after { opacity: .75; }
    .skill-chip::after { transition: none; }
    .aurora-a, .aurora-b, .orb-1, .orb-2 { animation: none; }
  }

  /* ==================== Additional Card Effects ==================== */
  
  /* Education Cards */
  .education-card { position: relative; isolation: isolate; }
  .education-card .aurora-edu-a { position: absolute; inset: -15%; border-radius: 20px; filter: blur(20px); opacity: 0.06; pointer-events: none; z-index: 0; background: radial-gradient(50% 40% at 20% 0%, hsl(var(--primary) / .9), transparent 65%); animation: auroraShift 10s ease-in-out infinite alternate; }
  .education-card .aurora-edu-b { position: absolute; inset: -15%; border-radius: 20px; filter: blur(20px); opacity: 0.06; pointer-events: none; z-index: 0; background: radial-gradient(50% 40% at 80% 100%, hsl(var(--secondary) / .9), transparent 65%); animation: auroraShift 12s ease-in-out infinite alternate-reverse; }
  .education-card .degree-badge { position: absolute; top: 6px; right: 8px; width: 24px; height: 24px; border-radius: 9999px; background: hsl(var(--accent) / 0.15); color: hsl(var(--accent)); display: flex; align-items: center; justify-content: center; z-index: 1; animation: float 8s ease-in-out infinite; }
  .education-card .timeline-dot { position: absolute; top: -2px; left: -4px; width: 8px; height: 8px; border-radius: 9999px; background: hsl(var(--primary)); opacity: 0.7; z-index: 1; animation: pulseGlow 2s ease-in-out infinite; }

  /* Experience Cards */
  .experience-card { position: relative; isolation: isolate; }
  .experience-card .aurora-exp-a { position: absolute; inset: -15%; border-radius: 20px; filter: blur(18px); opacity: 0.07; pointer-events: none; z-index: 0; background: radial-gradient(60% 50% at 0% 30%, hsl(var(--accent) / .8), transparent 60%); animation: auroraShift 9s ease-in-out infinite alternate; }
  .experience-card .aurora-exp-b { position: absolute; inset: -15%; border-radius: 20px; filter: blur(18px); opacity: 0.07; pointer-events: none; z-index: 0; background: radial-gradient(60% 50% at 100% 70%, hsl(var(--primary) / .8), transparent 60%); animation: auroraShift 11s ease-in-out infinite alternate-reverse; }
  .experience-card .company-glow { position: absolute; top: 0; right: 0; width: 60px; height: 60px; border-radius: 9999px; background: radial-gradient(circle, hsl(var(--secondary) / 0.12), transparent 70%); filter: blur(12px); z-index: 0; animation: float 6s ease-in-out infinite; }
  /* NEW: diagonal scanlines + soft particles */
  .experience-card .exp-diag-lines { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 0; opacity: .12; background: repeating-linear-gradient(45deg, hsl(var(--foreground) / 0.06) 0 1px, transparent 1px 12px); animation: diagDrift 14s linear infinite; }
  .experience-card .exp-particles { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 0; opacity: .12; background: radial-gradient(2px 2px at 10% 20%, hsl(var(--primary) / .3) 50%, transparent 51%), radial-gradient(2px 2px at 80% 70%, hsl(var(--secondary) / .3) 50%, transparent 51%), radial-gradient(2px 2px at 40% 60%, hsl(var(--accent) / .3) 50%, transparent 51%); background-size: 100% 100%; animation: particleDrift 18s ease-in-out infinite; }
  @keyframes diagDrift { to { background-position: 60px 60px; } }
  @keyframes particleDrift { 0%,100% { transform: translateY(0); } 50% { transform: translateY(-6px); } }
  .timeline-connector { background: linear-gradient(180deg, hsl(var(--primary) / .3), hsl(var(--secondary) / .3)); filter: drop-shadow(0 0 6px hsl(var(--primary) / .3)); animation: rainbowFlow 8s linear infinite; }
  .timeline-icon .pulse-ring { animation: pulseRing 2s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite; }
  @keyframes pulseRing { 0% { transform: scale(0.8); opacity: 1; } 100% { transform: scale(1.4); opacity: 0; } }
  .experience-badge { transition: all 200ms ease; }
  .tech-chip { position: relative; transition: all 200ms ease; }
  .tech-chip:hover { box-shadow: 0 4px 12px hsl(var(--primary) / 0.2); }

  /* Project Cards */
  .project-card { position: relative; isolation: isolate; }
  .project-card .aurora-proj-a { position: absolute; inset: -18%; border-radius: 24px; filter: blur(22px); opacity: 0.08; pointer-events: none; z-index: 0; background: radial-gradient(70% 60% at 10% 10%, hsl(var(--secondary) / .9), transparent 65%); animation: auroraShift 11s ease-in-out infinite alternate; }
  .project-card .aurora-proj-b { position: absolute; inset: -18%; border-radius: 24px; filter: blur(22px); opacity: 0.08; pointer-events: none; z-index: 0; background: radial-gradient(70% 60% at 90% 90%, hsl(var(--accent) / .9), transparent 65%); animation: auroraShift 13s ease-in-out infinite alternate-reverse; }
  .project-card .category-badge { animation: float 7s ease-in-out infinite; }
  /* NEW: subtle vertical scanlines and neon corner brackets */
  .project-card .proj-scanlines { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 0; opacity: .10; background: repeating-linear-gradient(0deg, hsl(var(--foreground) / .06) 0 1px, transparent 1px 10px); animation: scanScroll 16s linear infinite; }
  @keyframes scanScroll { to { background-position: 0 12px; } }
  .project-card .corner-bracket { position: absolute; width: 18px; height: 18px; border: 2px solid hsl(var(--primary) / .55); filter: drop-shadow(0 0 8px hsl(var(--primary) / .45)); opacity: .7; pointer-events: none; z-index: 1; transition: border-color 200ms ease, opacity 200ms ease; }
  .project-card .corner-bracket.tl { top: 8px; left: 8px; border-right: 0; border-bottom: 0; border-top-left-radius: 6px; }
  .project-card .corner-bracket.br { bottom: 8px; right: 8px; border-left: 0; border-top: 0; border-bottom-right-radius: 6px; }
  .project-card:hover .corner-bracket { border-color: hsl(var(--secondary)); opacity: 1; }
  .project-button { position: relative; overflow: hidden; }
  .project-button::before { content: ""; position: absolute; top: 50%; left: 50%; width: 0; height: 0; border-radius: 9999px; background: radial-gradient(circle, rgba(255,255,255,0.3), transparent 70%); transform: translate(-50%, -50%); transition: width 0.3s ease, height 0.3s ease; pointer-events: none; }
  .project-button:hover::before { width: 100px; height: 100px; }

  /* Achievement Cards */
  .achievement-card { position: relative; isolation: isolate; }
  .achievement-card .aurora-ach-a { position: absolute; inset: -20%; border-radius: 24px; filter: blur(24px); opacity: 0.08; pointer-events: none; z-index: 0; background: radial-gradient(60% 50% at 30% 0%, hsl(var(--primary) / .9), transparent 70%); animation: auroraShift 8s ease-in-out infinite alternate; }
  .achievement-card .aurora-ach-b { position: absolute; inset: -20%; border-radius: 24px; filter: blur(24px); opacity: 0.08; pointer-events: none; z-index: 0; background: radial-gradient(60% 50% at 70% 100%, hsl(var(--accent) / .9), transparent 70%); animation: auroraShift 10s ease-in-out infinite alternate-reverse; }
  .achievement-card .medal-shine { position: absolute; top: -30%; left: -20%; width: 60%; height: 160%; background: linear-gradient(45deg, transparent 30%, rgba(255,215,0,0.2) 50%, transparent 70%); transform: translateX(-120%) rotate(25deg); transition: transform 1s ease; pointer-events: none; z-index: 1; }
  .achievement-card:hover .medal-shine { transform: translateX(180%) rotate(25deg); }
  .trophy-container { position: relative; }

  /* Certification Cards */
  .certification-card { position: relative; isolation: isolate; }
  .certification-card .aurora-cert-a { position: absolute; inset: -15%; border-radius: 20px; filter: blur(16px); opacity: 0.06; pointer-events: none; z-index: 0; background: radial-gradient(80% 40% at 20% 20%, hsl(var(--secondary) / .8), transparent 60%); animation: auroraShift 14s ease-in-out infinite alternate; }
  .certification-card .aurora-cert-b { position: absolute; inset: -15%; border-radius: 20px; filter: blur(16px); opacity: 0.06; pointer-events: none; z-index: 0; background: radial-gradient(80% 40% at 80% 80%, hsl(var(--primary) / .8), transparent 60%); animation: auroraShift 16s ease-in-out infinite alternate-reverse; }
  .cert-item { position: relative; overflow: hidden; border: 1px solid transparent; transition: all 200ms ease; }
  .cert-item:hover { border-color: hsl(var(--primary) / 0.3); box-shadow: 0 6px 20px hsl(var(--primary) / 0.15); }
  .cert-item::before { content: ""; position: absolute; top: 0; left: -100%; width: 100%; height: 100%; background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent); transition: left 0.5s ease; pointer-events: none; }
  .cert-item:hover::before { left: 100%; }

  /* Volunteering Cards */
  .volunteer-card { position: relative; isolation: isolate; }
  .volunteer-card .vol-halo { position: absolute; inset: -15%; border-radius: 24px; pointer-events: none; z-index: 0; filter: blur(24px); opacity: .11; background: radial-gradient(60% 50% at 20% 20%, hsl(340 82% 60% / .85), transparent 60%); animation: auroraShift 12s ease-in-out infinite; }
  .volunteer-card .vol-halo-2 { position: absolute; inset: -15%; border-radius: 24px; pointer-events: none; z-index: 0; filter: blur(24px); opacity: .11; background: radial-gradient(60% 50% at 80% 80%, hsl(262 83% 58% / .85), transparent 60%); animation: auroraShift 14s ease-in-out infinite reverse; }
  .volunteer-card .vol-ripple { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 0; }
  .volunteer-card .vol-ripple::before, .volunteer-card .vol-ripple::after { content: ""; position: absolute; top: 20px; left: 20px; width: 32px; height: 32px; border-radius: 9999px; border: 2px solid hsl(340 82% 60% / .45); transform: translateZ(0); animation: rippleRing 3.2s ease-out infinite; }
  .volunteer-card .vol-ripple::after { animation-delay: .9s; }
  .volunteer-card .vol-sparkles { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 0; background:
      radial-gradient(2px 2px at 30% 30%, rgba(255,255,255,.35) 50%, transparent 51%),
      radial-gradient(1.5px 1.5px at 70% 60%, rgba(255,255,255,.3) 50%, transparent 51%),
      radial-gradient(2px 2px at 50% 80%, rgba(255,255,255,.25) 50%, transparent 51%);
    opacity: .25;
    animation: sparkleFloat 10s ease-in-out infinite;
  }
  @keyframes sparkleFloat { 0%,100% { transform: translateY(0); } 50% { transform: translateY(-8px); } }

  /* Education extras: chalk grid + hover underline on institution */
  .education-card .edu-grid { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 0; opacity: .10; background:
      linear-gradient(0deg, hsl(var(--foreground) / .08) 1px, transparent 1px) 0 0 / 22px 22px,
      linear-gradient(90deg, hsl(var(--foreground) / .08) 1px, transparent 1px) 0 0 / 22px 22px; animation: gridPan 18s linear infinite; }
  @keyframes gridPan { to { background-position: 0 22px, 22px 0; } }
  .education-card .edu-sparkles { position: absolute; inset: 0; border-radius: inherit; pointer-events: none; z-index: 0; background: radial-gradient(2px 2px at 15% 20%, hsl(var(--primary) / .4) 50%, transparent 51%), radial-gradient(2px 2px at 85% 70%, hsl(var(--secondary) / .35) 50%, transparent 51%); opacity: .25; animation: sparkleFloat 12s ease-in-out infinite; }
  .education-card .edu-underline { position: relative; display: inline-block; }
  .education-card .edu-underline::after { content: ""; position: absolute; left: 0; right: 0; bottom: -2px; height: 2px; background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--secondary))); transform: scaleX(0); transform-origin: left; transition: transform 300ms ease; opacity: .8; }
  .education-card:hover .edu-underline::after { transform: scaleX(1); }

  /* Reduced motion fallbacks */
  @media (prefers-reduced-motion: reduce) {
    .aurora-edu-a, .aurora-edu-b, .aurora-exp-a, .aurora-exp-b, .aurora-proj-a, .aurora-proj-b, .aurora-ach-a, .aurora-ach-b, .aurora-cert-a, .aurora-cert-b, .exp-diag-lines, .exp-particles, .proj-scanlines, .vol-halo, .vol-halo-2, .edu-grid, .edu-sparkles { animation: none; }
    .degree-badge, .company-glow, .category-badge { animation: none; }
    .timeline-connector { animation: none; background: linear-gradient(180deg, hsl(var(--primary) / .2), hsl(var(--secondary) / .2)); }
    .timeline-icon .pulse-ring { animation: none; }
    .medal-shine { transition: none; }
    .cert-item::before { transition: none; }
    .corner-bracket { transition: none; }
  }

  /* Animation utilities */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  /* Float only for ~3.5s then stop */
  .animate-float-brief {
    animation: float 3.5s ease-in-out 1 both;
  }

  @media (prefers-reduced-motion: reduce) {
    .animate-float-brief { animation: none; }
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  /* Smooth photo entrance (zoom + fade + slight rise) */
  @keyframes photoEnter {
    0%   { opacity: 0; transform: translateY(14px) scale(0.92); }
    60%  { opacity: 1; }
    100% { opacity: 1; transform: translateY(0) scale(1); }
  }
  .animate-photo-enter { animation: photoEnter 0.7s ease-out both; }

  /* Subtle continuous float for focal elements */
  @keyframes photoFloat {
    0%, 100% { transform: translateY(0); }
    50%      { transform: translateY(-6px); }
  }
  .photo-float { animation: photoFloat 10s ease-in-out infinite; }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }

  @keyframes glow {
    from { box-shadow: var(--shadow-card); }
    to { box-shadow: var(--shadow-glow); }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes blink {
    50% { border-color: transparent; }
  }

  /* Make the caret disappear at the end of typing */
  @keyframes caret-hide {
    to { border-right-color: transparent; }
  }

  .animate-fadeInUp {
    animation: fadeInUp 0.8s ease-out;
  }

  .animate-slideInLeft {
    animation: slideInLeft 0.8s ease-out;
  }

  .animate-typing {
    overflow: hidden;
    white-space: nowrap;
    border-right: 3px solid hsl(var(--primary));
    /* Run typing once, a few blinks, then permanently hide caret */
    animation:
      typing 3.5s steps(40, end) 1 both,
      blink 0.75s step-end 4,
      caret-hide 0.01s linear 3.5s forwards;
  }

  /* --- Hero photo 3D highlight ring & shine sweep --- */
  @keyframes spinRing {
    to { transform: rotate(360deg); }
  }

  @keyframes pulseGlow {
    0%, 100% { opacity: 0.40; filter: drop-shadow(0 0 8px hsl(var(--primary) / 0.35)); }
    50% { opacity: 0.85; filter: drop-shadow(0 0 16px hsl(var(--primary) / 0.6)); }
  }

  .hero-photo-3d .glow-ring {
    position: absolute;
    inset: 0;
    border-radius: 9999px;
    /* Rotating conic gradient rainbow ring */
    background:
      conic-gradient(
        from 0deg,
        #ff004c 0%, /* red */
        #ff7a00 12.5%, /* orange */
        #ffd300 25%, /* yellow */
        #00e676 37.5%, /* green */
        #00e5ff 50%, /* cyan */
        #2979ff 62.5%, /* blue */
        #7c4dff 75%, /* indigo */
        #d500f9 87.5%, /* violet */
        #ff004c 100%
      );
  animation: spinRing 12s linear infinite;
    /* Hollow center to form a ring */
    /* Thicker visible ring so it doesn't get visually lost under the photo edge */
    -webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - 10px), #000 calc(100% - 2px));
      mask: radial-gradient(farthest-side, #0000 calc(100% - 10px), #000 calc(100% - 2px));
    filter: drop-shadow(0 0 12px rgba(59, 130, 246, 0.45));
    opacity: 0.8;
    pointer-events: none;
    z-index: 20;
    transition: opacity .3s ease, filter .3s ease;
    /* Use normal blend to ensure full-circle visibility on all backgrounds */
    mix-blend-mode: normal;
  }

  .hero-photo-3d:hover .glow-ring {
    opacity: 1;
    filter: drop-shadow(0 0 18px rgba(255, 0, 76, 0.55));
    /* intensify on hover */
  }

  /* Inner subtle ring with reverse rotation and gentle pulse */
  .hero-photo-3d .glow-ring-inner {
    position: absolute;
    inset: 8px;
    border-radius: 9999px;
    background: conic-gradient(from 90deg, rgba(255,255,255,0.35), rgba(255,255,255,0.05), rgba(255,255,255,0.35));
    -webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - 8px), #000 calc(100% - 3px));
      mask: radial-gradient(farthest-side, #0000 calc(100% - 8px), #000 calc(100% - 3px));
  animation: spinRing 16s linear infinite reverse, pulseGlow 3.2s ease-in-out infinite;
    opacity: 0.5;
    pointer-events: none;
    z-index: 25;
    mix-blend-mode: normal;
  }

  .hero-photo-3d:hover .glow-ring-inner { opacity: 0.65; }

  /* Subtle breathing float on hover */
  @keyframes breathe {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-6px); }
  }

  .hero-photo-3d:hover .photo-breathe {
    animation: breathe 6s ease-in-out infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    .hero-photo-3d:hover .photo-breathe { animation: none; }
    .hero-photo-3d .glow-ring,
    .hero-photo-3d .glow-ring-inner { animation: none; }
  }

  .hero-photo-3d .shine-sweep {
    position: absolute;
    inset: 0; /* keep inside the circle */
    border-radius: 9999px;
    background: linear-gradient(120deg, transparent 30%, rgba(255,255,255,0.28) 45%, transparent 60%);
    transform: translateX(-150%);
    transition: transform .9s ease, opacity .3s ease;
    opacity: 0;
    mix-blend-mode: screen;
    pointer-events: none;
    z-index: 30;
  }

  .hero-photo-3d:hover .shine-sweep {
    transform: translateX(150%);
    opacity: 1;
  }

  /* removed orbiters and sparkles */

  /* Animated Scrollbar (WebKit) + Themed (Firefox) */
  /* --- Glowing ripple rings around the photo --- */
  @keyframes rippleRing {
    0%   { transform: scale(0.95); opacity: 0.55; }
    70%  { opacity: 0.15; }
    100% { transform: scale(1.35); opacity: 0; }
  }

  .hero-photo-3d .ripple-rings {
    position: absolute;
    inset: -10px; /* slightly outside the image circle */
    border-radius: 9999px;
    pointer-events: none;
    z-index: 12;
  }
  .hero-photo-3d .ripple-rings > span {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    border: 2px solid hsl(var(--primary) / 0.35);
    box-shadow: 0 0 20px hsl(var(--primary) / 0.25);
    transform: scale(0.95);
    opacity: 0;
    animation: rippleRing 3.2s ease-out infinite;
  }
  .hero-photo-3d .ripple-rings > span:nth-child(2) { animation-delay: 1.05s; }
  .hero-photo-3d .ripple-rings > span:nth-child(3) { animation-delay: 2.1s; }

  /* Animated, themable native scrollbar (advanced) */

  /* Firefox: thin scrollbar with theme colors */
  * {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--primary)) transparent;
  }

  /* WebKit browsers (Chrome, Edge, Safari) */
  *::-webkit-scrollbar {
    width: 12px;
    height: 12px;
    background: transparent;
  }
  *::-webkit-scrollbar-track {
    border-radius: 9999px;
    background: hsl(var(--background) / 0.9);
    box-shadow: inset 0 0 0 1px hsl(var(--border) / 0.2);
  }
  *::-webkit-scrollbar-thumb {
    border-radius: 9999px;
    border: 2px solid hsl(var(--background) / 0.6);
    /* Layered backgrounds for depth: conic spin + soft highlight + base gradient */
    background:
      conic-gradient(
        from var(--sb-angle, 0deg),
        hsl(var(--primary)),
        hsl(var(--secondary)),
        hsl(var(--accent)),
        hsl(var(--primary))
      ) border-box,
      radial-gradient(120% 70% at 50% 15%, rgba(255,255,255,0.35), rgba(255,255,255,0) 60%) padding-box,
      linear-gradient(180deg,
        hsl(var(--primary) / 0.95),
        hsl(var(--secondary) / 0.95)
      ) padding-box;
    background-origin: border-box, padding-box, padding-box;
    background-clip: border-box, padding-box, padding-box;
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.45), 0 0 12px hsl(var(--primary) / 0.3);
    /* Spin the conic layer and flow the base gradient for motion */
    animation: sbAngleSpin 8s linear infinite, scrollbarThumbFlow 4s ease-in-out infinite;
  }
  *::-webkit-scrollbar-thumb:hover {
    animation-duration: 3s, 2.2s; /* faster spin and flow on hover */
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.55), 0 0 16px hsl(var(--primary) / 0.45), 0 0 24px hsl(var(--secondary) / 0.35);
  }
  *::-webkit-scrollbar-thumb:active {
    /* Stronger glow and denser gradient while dragging */
    border-color: hsl(var(--background) / 0.45);
    animation-duration: 1.2s, 1.2s; /* quickest when active */
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.6), 0 0 20px hsl(var(--primary) / 0.55), 0 0 30px hsl(var(--secondary) / 0.4);
  }
  *::-webkit-scrollbar-corner { background: transparent; }

  /* Explicitly style the page scrollbar (helps on Edge/overlay scrollbars) */
  html::-webkit-scrollbar {
    width: 12px !important;
    height: 12px !important;
    background: transparent;
  }
  html::-webkit-scrollbar-track {
    border-radius: 9999px;
    background: hsl(var(--background) / 0.9);
    box-shadow: inset 0 0 0 1px hsl(var(--border) / 0.2);
  }
  html::-webkit-scrollbar-thumb {
    border-radius: 9999px;
    border: 2px solid hsl(var(--background) / 0.6);
    background:
      conic-gradient(
        from var(--sb-angle, 0deg),
        hsl(var(--primary)),
        hsl(var(--secondary)),
        hsl(var(--accent)),
        hsl(var(--primary))
      ) border-box,
      radial-gradient(120% 70% at 50% 15%, rgba(255,255,255,0.35), rgba(255,255,255,0) 60%) padding-box,
      linear-gradient(180deg,
        hsl(var(--primary) / 0.95),
        hsl(var(--secondary) / 0.95)
      ) padding-box;
    background-origin: border-box, padding-box, padding-box;
    background-clip: border-box, padding-box, padding-box;
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.45), 0 0 12px hsl(var(--primary) / 0.3);
    animation: sbAngleSpin 8s linear infinite, scrollbarThumbFlow 4s ease-in-out infinite;
  }
  html::-webkit-scrollbar-thumb:hover {
    animation-duration: 3s, 2.2s;
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.55), 0 0 16px hsl(var(--primary) / 0.45), 0 0 24px hsl(var(--secondary) / 0.35);
  }
  html::-webkit-scrollbar-thumb:active {
    border-color: hsl(var(--background) / 0.45);
    animation-duration: 1.2s, 1.2s;
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.6), 0 0 20px hsl(var(--primary) / 0.55), 0 0 30px hsl(var(--secondary) / 0.4);
  }

  /* Body as root scroller (common on some setups) */
  body::-webkit-scrollbar { width: 12px !important; height: 12px !important; background: transparent; }
  body::-webkit-scrollbar-track {
    border-radius: 9999px;
    background: hsl(var(--background) / 0.9);
    box-shadow: inset 0 0 0 1px hsl(var(--border) / 0.2);
  }
  body::-webkit-scrollbar-thumb {
    border-radius: 9999px;
    border: 2px solid hsl(var(--background) / 0.6);
    background:
      conic-gradient(
        from var(--sb-angle, 0deg),
        hsl(var(--primary)),
        hsl(var(--secondary)),
        hsl(var(--accent)),
        hsl(var(--primary))
      ) border-box,
      radial-gradient(120% 70% at 50% 15%, rgba(255,255,255,0.35), rgba(255,255,255,0) 60%) padding-box,
      linear-gradient(180deg,
        hsl(var(--primary) / 0.95),
        hsl(var(--secondary) / 0.95)
      ) padding-box;
    background-origin: border-box, padding-box, padding-box;
    background-clip: border-box, padding-box, padding-box;
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.45), 0 0 12px hsl(var(--primary) / 0.3);
    animation: sbAngleSpin 8s linear infinite, scrollbarThumbFlow 4s ease-in-out infinite;
  }
  body::-webkit-scrollbar-thumb:hover {
    animation-duration: 3s, 2.2s;
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.55), 0 0 16px hsl(var(--primary) / 0.45), 0 0 24px hsl(var(--secondary) / 0.35);
  }
  body::-webkit-scrollbar-thumb:active {
    border-color: hsl(var(--background) / 0.45);
    animation-duration: 1.2s, 1.2s;
    box-shadow: 0 0 0 1px hsl(var(--border) / 0.6), 0 0 20px hsl(var(--primary) / 0.55), 0 0 30px hsl(var(--secondary) / 0.4);
  }

  /* High-contrast/forced-colors mode on Windows can override scrollbar colors; opt out to keep custom styling */
  @media (forced-colors: active) {
    *::-webkit-scrollbar,
    *::-webkit-scrollbar-track,
    *::-webkit-scrollbar-thumb { forced-color-adjust: none; }
  }

  @keyframes scrollbarThumbFlow {
    0% { background-position: 0% 0%; }
    50% { background-position: 0% 100%; }
    100% { background-position: 0% 0%; }
  }

  /* Reusable flowing rainbow gradient for progress bars */
  @keyframes rainbowFlow {
    0% { background-position: 0% 50%; }
    100% { background-position: 200% 50%; }
  }
  .rainbow-flow {
    background-image: linear-gradient(90deg,
      rgba(255, 0, 76, 0.7) 0%,   /* red */
      rgba(255, 122, 0, 0.7) 12.5%, /* orange */
      rgba(255, 211, 0, 0.7) 25%,  /* yellow */
      rgba(0, 230, 118, 0.7) 37.5%,/* green */
      rgba(0, 229, 255, 0.7) 50%,  /* cyan */
      rgba(41, 121, 255, 0.7) 62.5%,/* blue */
      rgba(124, 77, 255, 0.7) 75%, /* indigo */
      rgba(213, 0, 249, 0.7) 87.5%,/* violet */
      rgba(255, 0, 76, 0.7) 100%
    );
    background-size: 200% 100%;
    animation: rainbowFlow 6s linear infinite;
    filter: saturate(0.9);
    opacity: 0.94;
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    *::-webkit-scrollbar-thumb { animation: none; }
    .rainbow-flow { animation: none; }
  }
}